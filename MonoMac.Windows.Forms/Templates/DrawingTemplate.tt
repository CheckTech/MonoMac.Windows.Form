<#@ template language="C#v3.5" hostspecific="True" #>
<#@ output extension=".g.cs" #>
<#@ assembly name="System.Xml"#>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Collections;
using System.Linq;
using MonoMac.AppKit;
using System.Drawing;
using MonoMac.Foundation;
namespace System.Windows.Forms
{
<#
 
string[] subfolders = new string[]{ @"UserControl",
							  @"ButtonHelper",
							  @"TextBoxMouseView",
							  @"ComboBoxMouseView",
							  @"ListBoxMouseView",
							  @"TrackBarMouseView",
							  @"PanelMouseView",
							  @"UserControlMouseView",
							  };
foreach(var folder in subfolders)
{
#>
	public partial class <#= folder #> 
	{	
		public bool shouldDraw {get;set;}
		public override void DrawRect (RectangleF dirtyRect)
		{
			using (var graphics = Graphics.FromHwnd (this.Handle))
			{
				var events = new PaintEventArgs (graphics, Rectangle.Round (dirtyRect));
				Host.Draw (events);
			}
			if (shouldDraw)
				base.DrawRect (dirtyRect);
		}
			
		protected virtual void OnPaint(PaintEventArgs e)
        {
			if (Paint != null)
				Paint (this, e);
        	shouldDraw = true;
        }
        public Color BackColor {get;set;}
		protected virtual void OnPaintBackground(PaintEventArgs e)
		{
			if(BackColor == null)
				BackColor = Color.Transparent;
			if(BackColor == Color.Transparent)
				return;
			Pen pen = new Pen(BackColor);
			e.Graphics.DrawRectangle(pen,e.ClipRectangle);
		}
	}
	
	
<#
}

#>
}


